{"version":3,"sources":["webpack:///node_modules/ng-navigator-share/__ivy_ngcc__/fesm2015/ng-navigator-share.js","webpack:///src/app/meta.service.ts"],"names":["NgNavigatorShareService","webNavigator","window","navigator","title","text","url","Promise","resolve","reject","share","undefined","console","warn","isShared","shared","error","ɵfac","NgNavigatorShareService_Factory","t","ɵprov","token","factory","providedIn","ctorParameters","ngInjectableDef","type","args","MetaService","dom","meta","canURL","URL","link","document","querySelector","setAttribute","createElement","head","appendChild","post","removeAllKnownTags","setTitle","setDescription","description","createCanonicalURL","publishedAtUrl","createTwitterCardForBlogPost","createOpenGraphProfileForBlogPost","updateTag","name","content","thumbnail","property","route","removeTag"],"mappings":"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","file":"common-es5.js","sourcesContent":["import { __awaiter } from 'tslib';\nimport { Injectable, ɵɵdefineInjectable } from '@angular/core';\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/ng-navigator-share/ng-navigator-share.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nimport * as ɵngcc0 from '@angular/core';\nclass NgNavigatorShareService {\r\n    constructor() {\r\n        this.webNavigator = null;\r\n        this.webNavigator = window.navigator;\r\n    }\r\n    /**\r\n     * @param {?} __0\r\n     * @return {?}\r\n     */\r\n    share({ title, text, url }) {\r\n        return new Promise((/**\r\n         * @param {?} resolve\r\n         * @param {?} reject\r\n         * @return {?}\r\n         */\r\n        (resolve, reject) => __awaiter(this, void 0, void 0, function* () {\r\n            if (this.webNavigator !== null && this.webNavigator.share !== undefined) {\r\n                if ((text === undefined || text === null) &&\r\n                    (url === undefined || url === null)) {\r\n                    console.warn(`text and url both can't be empty, at least provide either text or url`);\r\n                }\r\n                else {\r\n                    try {\r\n                        /** @type {?} */\r\n                        const isShared = yield this.webNavigator.share({\r\n                            title: title,\r\n                            text: text,\r\n                            url: url,\r\n                        });\r\n                        resolve({\r\n                            shared: true\r\n                        });\r\n                    }\r\n                    catch (error) {\r\n                        reject({\r\n                            shared: false,\r\n                            error: error\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                reject({\r\n                    shared: false,\r\n                    error: `This service/api is not supported in your Browser`\r\n                });\r\n            }\r\n        })));\r\n    }\r\n}\nNgNavigatorShareService.ɵfac = function NgNavigatorShareService_Factory(t) { return new (t || NgNavigatorShareService)(); };\nNgNavigatorShareService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgNavigatorShareService, factory: NgNavigatorShareService.ɵfac, providedIn: 'root' });\r\n/** @nocollapse */\r\nNgNavigatorShareService.ctorParameters = () => [];\r\n/** @nocollapse */ NgNavigatorShareService.ngInjectableDef = ɵɵdefineInjectable({ factory: function NgNavigatorShareService_Factory() { return new NgNavigatorShareService(); }, token: NgNavigatorShareService, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgNavigatorShareService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return []; }, null); })();\r\nif (false) {\r\n    /** @type {?} */\r\n    NgNavigatorShareService.prototype.webNavigator;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: public_api.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: ng-navigator-share.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { NgNavigatorShareService };\n\n//# sourceMappingURL=ng-navigator-share.js.map","import { Injectable, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Meta, Title } from '@angular/platform-browser';\nimport { ScullyRoute } from '@scullyio/ng-lib';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MetaService {\n  constructor(\n    @Inject(DOCUMENT) private dom,\n    public meta: Meta,\n    private title: Title,\n  ) {}\n\n  createCanonicalURL(url?: string) {\n    const canURL = url === undefined ? this.dom.URL : url;\n    let link: HTMLLinkElement = document.querySelector('link[rel=\"canonical\"]');\n    if (link) {\n      link.setAttribute('href', canURL);\n    } else {\n      link = this.dom.createElement('link');\n      link.setAttribute('rel', 'canonical');\n      this.dom.head.appendChild(link);\n      link.setAttribute('href', canURL);\n    }\n  }\n\n  createMetaDataForPost(post: ScullyRoute) {\n    this.removeAllKnownTags();\n    this.setTitle(post.title);\n    this.setDescription(post.description);\n    this.createCanonicalURL(post.publishedAtUrl);\n    this.createTwitterCardForBlogPost(post);\n    this.createOpenGraphProfileForBlogPost(post);\n  }\n\n  private setTitle(title: string) {\n    this.title.setTitle(`D-Koppenhagen.de | ${title}`);\n  }\n\n  private setDescription(description: string) {\n    this.meta.updateTag({ name: 'description', content: description });\n  }\n\n  private createTwitterCardForBlogPost(post: ScullyRoute) {\n    this.meta.updateTag({\n      name: 'twitter:card',\n      content: 'summary',\n    });\n    this.meta.updateTag({\n      name: 'twitter:site',\n      content: '@d_koppenhagen',\n    });\n    this.meta.updateTag({\n      name: 'twitter:creator',\n      content: '@d_koppenhagen',\n    });\n    this.meta.updateTag({\n      name: 'twitter:title',\n      content: post.title,\n    });\n    this.meta.updateTag({\n      name: 'twitter:description',\n      content: post.description,\n    });\n    this.meta.updateTag({\n      name: 'twitter:image',\n      content: `https://d-koppenhagen.de/${post.thumbnail}`,\n    });\n  }\n\n  private createOpenGraphProfileForBlogPost(post: ScullyRoute) {\n    this.meta.updateTag({ property: 'og:title', content: post.title });\n    this.meta.updateTag({\n      property: 'og:description',\n      content: post.description,\n    });\n    this.meta.updateTag({\n      name: 'og:image',\n      content: `https://d-koppenhagen.de/${post.thumbnail}`,\n    });\n    this.meta.updateTag({\n      name: 'og:url',\n      content: `https://d-koppenhagen.de${post.route}`,\n    });\n  }\n\n  private removeAllKnownTags() {\n    this.meta.removeTag(`property='og:title'`);\n    this.meta.removeTag(`name='twitter:title'`);\n    this.meta.removeTag(`name='description'`);\n    this.meta.removeTag(`property='og:description'`);\n    this.meta.removeTag(`name='twitter:description'`);\n    this.meta.removeTag(`property='og:image'`);\n    this.meta.removeTag(`property='og:image:width'`);\n    this.meta.removeTag(`property='og:image:height'`);\n    this.meta.removeTag(`name='twitter:image'`);\n    this.meta.removeTag(`name='twitter:card'`);\n    this.meta.removeTag(`name='twitter:site'`);\n    this.meta.removeTag(`property='og:url'`);\n    this.meta.removeTag(`property='og:locale'`);\n    this.meta.removeTag(`property='og:type'`);\n    this.meta.removeTag(`property='fb:app_id'`);\n  }\n}\n"]}